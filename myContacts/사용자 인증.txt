jwt

세션: 사용자가 웹사이트나 애플리케이션에 접속한 후 종료될 때까지 유지되는 데이터 저장 공간
웹 사이트는 기본적으로 무상태 이기 때문에 사용자의 로그인 상태나 특정 설정을 유지하려면 세션을 활용하여 상태를 저장
즉, 서버는 클라이언트(사용자)의 이전 요청을 기억하지 않는다는 의미입니다.

예제 1: 무상태(Stateless) 동작 방식
A 사용자가 로그인 요청을 보냄 → 서버가 로그인 성공 응답을 반환.
A 사용자가 로그인 후 페이지를 새로고침하거나 다른 페이지로 이동.
서버는 A 사용자의 이전 로그인 정보를 기억하지 못함.
A 사용자는 다시 로그인해야 함.
➡ 이렇게 되면 사용자가 웹사이트를 사용할 때마다 매번 로그인해야 해서 불편함!

토큰: 인증 및 권한 부여에 사용되는 문자열
토큰 기반 인증 방식은 서버가 사용자의 상태를 직접 저장하지 않고 클라이언트가 인증 정보를 포함한 토큰을 가지고 다니는 방식입니다.

동작 순서
1. 사용자가 첫 번째 로그인 요청을 함
2. 서버는 데이터베이스에 사용자가 있는지 확인
3.  사용자가 확인되면 서버에서 토큰을 발급하고 이것을 응답 객체에 담아 클라이언트에게 보냄
4. 클라이언트의 쿠기에 토큰을 저장
5. 클라이언트에서 로그인이 필요할 때 요청 헤더에 토큰을 담아 서버에 요청
6. 서버에서는 jwt를 검증해서 사용자 정보를 확인
7. 사용자가 확인되면 요청한 처리 결과를 클라이언트에게 넘겨줌

jwt로 사용자 인증 방법
1. 서버에서 토큰 만들기 - jwt.sign 함수
jwt.sign(페이로드, 비밀키, [옵션, 콜백])
2. 클라이언트에서 토큰 전송하기
3. 서버에서 토큰 검증하기