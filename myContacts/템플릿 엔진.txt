템플릿 엔진: 사용자 동작에 따라 내용이 달라지는 동적인 콘텐츠를 가져와서 보여주려면 템플릿 엔진 필요

템플릿 파일: 데이터베이스에서 가져온 데이터 중 어떤 값을 어느 위치에 넣을지 미리 만들어 놓은 틀
템플릿 엔진: 템플릿 파일을 만들고 데이터베이스에서 가져온 동적인 데이터를 템플릿 파일에 연결하는 역할

컨트롤러에서 템플릿 파일로 값 넘기기
res.render(ejs 파일, {변수: 전송 자료})
ejs 태그
<%= 변수%>
<% js 코드 %>
<%- html 코드드%>

정적인 파일 연결하기
css, js파일, 이미지 등 정적인 파일은 별도의 폴더에 모아놓고 사용함
주로 public폴더에 모아 두고 express.static함수를 사용해 연결

-> 템플릿 파일에서 사용하는 css나 js파일, 이미지, 등을 public 폴더에서 꺼내서 사용

 템플릿 엔진(SSR, Server-Side Rendering) → 서버에서 HTML을 완성해서 클라이언트에 전달
✅ 프론트엔드에서 데이터 받아 렌더링(CSR, Client-Side Rendering) → 서버에서 데이터를 받아 프론트엔드에서 HTML을 생성하여 화면에 표시

get, post말고 put이나 delete는 form태그에서 처리하지 못함
method-override 패키지 설치
app.js에 미들웨어로 등록해서 전체에 등록
<form action="/contacts/<%= contact._method=DELETE" method="POST" style="diinline;">

contactControllers.js  38줄
res.redirect(경로): 경로로 새로운 요청을 보내도록 함
res.render("index.ejs", {contacts: contact}) 사용하면 안되는 이유
1. 수정된 단일 연락처만 전달함
2. res.render은 현재 요청에 대해 템플릿을 렌더링할 뿐 클라이언트의 url은 변경 x
3.PRG (Post-Redirect-Get)패턴
put요청 후 res.render을  사용하면 사용자가 새로고침을 누를 때마다 같은 put요청이 반복될 수 있음
  res.redirect("/contacts") put요청 후 contacts경로로 다시 get요청을 보내서 중복 발생 x





app.use(express.static(path.join(__dirname, "assets")));
이 코드가 있는 상태에서 모든 경로를 다 주석처리해도 localhost에 접속이 가능했음

비밀번호 암호화하기 - bcrypt 모듈
해시 함수: 입력값을 받아서 또 다른 값을 반환하는 함수
해시 함수는 일방향 함수 - 해시반 보고 원래 값을 복원하는게 거의 불가능
입력값이 같으면 항상 같은 해시를 반환하지만 조금만 변경하면 완전히 다른 값이 됨

bcrypt.hash(data, saltlRounds, callback);
data: 해시하려는 값
saltRounds: 반복할 횟수
callback: 입력값을 해시한 후 실행할 함수

const password = "1234";

bcrypt.hash(password, 10, (err, hash) = > {
  try{

  } catch(error){

  }
})

비밀번호 확인하기: 비밀번호를 비교할 때는 사용자가 입력한 비밀번호를 해시한 후 데이터베이스에 있는 해시값과 같은지 확인
bcrypt.compate(data,  encrypted, callback)
data: 비교할 입력값
encrypted:비교할 대상
callback: 비교한 후에 실행할 함수


app.use(express.json());
app.use(express.urlencoded({ extended: true }));
연락처를 추가할때  이 코드가 없을때 빈 값이 저장됨

app.use(express.urlencoded({ extended: true }))를 추가하여 정상적으로 작동한 이유는 폼 데이터를 파싱하는 방식 때문입니다.
https://chatgpt.com/share/67aed01a-e3a8-800d-b853-2ef4e8c6fb83